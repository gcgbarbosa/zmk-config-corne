/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
 &kp TAB           &kp Q           &kp W               &kp E         &kp R          &kp T      &kp Y             &kp U               &kp I           &kp O                   &kp P  &kp ENTER
 &kp ESC  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LSHIFT F          &kp G      &kp H  &mt LEFT_SHIFT J  &mt LEFT_CONTROL K  &mt LEFT_ALT L  &mt LEFT_WIN SEMICOLON    &kp SQT
  &trans           &kp Z           &kp X               &kp C         &kp V          &kp B      &kp N             &kp M           &kp COMMA         &kp DOT                &kp FSLH     &trans
                                                      &trans         &mo 1  &kp BACKSPACE  &kp SPACE             &mo 2               &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans
                         &trans  &trans  &trans    &trans    &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT  &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
 &kp F1    &kp F2  &kp F3    &kp F4    &kp F5      &kp F6  &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
 &kp F7    &kp F8  &kp F9   &kp F10   &kp F11     &kp F12  &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &trans  &kp DELETE     &trans     &trans           &trans
            >;
        };

        KPeMOUSE {
            bindings = <
 &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9        &trans  &bt BT_SEL 1      &kp KP_PLUS  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_0  &kp KP_MULTIPLY  &trans
 &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6        &trans  &bt BT_SEL 2     &kp KP_MINUS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6    &kp KP_DIVIDE  &trans
 &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3        &trans  &bt BT_SEL 3  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2        &kp KP_N3   &kp KP_NUMLOCK  &trans
                                           &trans  &kp NUMBER_0    &bt BT_CLR           &trans           &trans           &trans
            >;
        };
    };
};
